name: Build and Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: dennyahn/fintech-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
        
    - name: Add EC2 to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # 프로젝트 디렉토리로 이동
          cd Finsight_main_server
          
          # 최신 코드 가져오기
          git pull origin main
          
          # Docker 컨테이너 중지
          docker-compose -f docker-compose.prod.yml down
          
          # Docker 이미지 최신화 (방금 빌드한 최신 이미지)
          docker-compose -f docker-compose.prod.yml pull
          
          # Docker 컨테이너 시작
          docker-compose -f docker-compose.prod.yml up -d
          
          # 컨테이너 상태 확인
          docker-compose -f docker-compose.prod.yml ps
          
          # 애플리케이션 헬스체크
          sleep 30
          curl -f http://localhost:8080/api/health || exit 1
          
          echo "배포가 성공적으로 완료되었습니다!"
        EOF
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ 배포 성공: https://finsight.o-r.kr"
        else
          echo "❌ 배포 실패: 로그를 확인해주세요"
        fi
